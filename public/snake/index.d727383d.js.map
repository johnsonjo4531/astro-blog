{"mappings":"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","sources":["experiments-static/snake/js/game/GameRenderer.js"],"sourcesContent":["window.GameRenderer = function GameRenderer (canvas) {\n  var context =  canvas.getContext('2d');\n  const fontFamily = \"'Press Start 2P', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\";\n\n  var width = canvas.width;\n  var height = canvas.height;\n\n  function clearCanvas () {\n    context.clearRect(0, 0, width, height);\n  }\n\n  function render (state, elapsed) {\n    clearCanvas();\n    renderSnake(state.snake);\n    renderObstacles(state.obstacles);\n    renderFood(state.food);\n    renderBorder();\n    renderCountdown(state);\n    renderSound(state);\n  }\n\n  function renderBorder () {\n    var color = \"steelblue\";\n    var stroke = 'transparent'\n    renderRectangle({\n      x: 0,\n      y: 0,\n      width: width,\n      height: height/50,\n      color,\n      strokeColor: stroke,\n    })\n    renderRectangle({\n      x: 0,\n      y: 0,\n      width: width/50,\n      height: height,\n      color,\n      strokeColor: stroke,\n    })\n    renderRectangle({\n      x: 49*width/50,\n      y: 0,\n      width: width/50,\n      height: height,\n      color,\n      strokeColor: stroke,\n    })\n    renderRectangle({\n      x: 0,\n      y: 49*height/50,\n      width: width,\n      height: height/50,\n      color,\n      strokeColor: stroke,\n    })\n  }\n\n  function renderItem (part, color) {\n    renderRectangle({\n      x: part.x*width/50,\n      y: part.y*height/50,\n      width: width/50,\n      height: height/50,\n      color,\n      strokeColor: 'black',\n    })\n  }\n\n  function renderSnake (snake) {\n    for(var part of snake) {\n      renderItem(part, \"seagreen\");\n    }\n  }\n\n  function renderObstacles (obstacles) {\n    for(var part of obstacles) {\n      renderItem(part, 'slategrey');\n    }\n  }\n\n  function renderFood (food) {\n    renderItem(food, 'tomato');\n  }\n\n  function getFontStyle (spec) {\n    return `${Math.min(getFontSizeForWidth(spec.text, spec.width), getFontSizeForHeight(spec.height))}px ${fontFamily}`\n  }\n\n  var scoreFont = getFontStyle({\n    text: `Score: 888`,\n    // 0.05 is the padding\n    width: (width * 0.11)*(1-0.05*2),\n    height: (width * 0.02)*(1-0.05*2),\n  });\n\n  function drawScore (state) {\n    DrawText({\n      text: `Score: ${state.points}`,\n      rect: Geometry.Rectangle({\n        width: unit * 30,\n        height: unit * 5,\n        x: state.width - unit * 30,\n        y: state.height - unit * 5\n      }),\n      font: scoreFont\n    });\n  }\n\n  function renderRectangle (rect) {\n    context.save();\n    context.beginPath();\n    context.fillStyle = rect.color;\n    context.fillRect(flr(rect.x), flr(rect.y), flr(rect.width), flr(rect.height)); \n    context.strokeStyle = rect.strokeColor;\n    context.strokeRect(flr(rect.x), flr(rect.y), flr(rect.width), flr(rect.height)); \n    context.restore();\n  }\n\n  function strokeRectangle (rect) {\n    context.save();\n    context.beginPath();\n    \n    context.restore();\n  }\n\n  /**\n   * A functional binary search method takes a directionDecider function and supplies\n   * @param {Number} min \n   * min number to search with\n   * @param {Number} max \n   * max number to search with\n   * @param {Function} directionDecider\n   * directionDecider has signature, (SearchItem: Number) => Direction: Number, \n   * and should return  a positive number for going higher \n   * a negative number for searching lower and 0 if the search element is found.\n   */\n  function binSearch (min, max, directionDecider) {\n    if(min > max) {\n      return [max, undefined, min];\n    }\n    var mid = Math.floor((min + max) / 2)\n    var dir = directionDecider(mid);\n    if(dir < 0) {\n      return binSearch(min, mid - 1, directionDecider);\n    } else if (dir > 0) {\n      return binSearch(mid + 1, max, directionDecider);\n    } else {\n      return [mid-1, mid, mid+1]\n    }\n  }\n\n  function getFontSizeForWidth (text, width) {\n    context.save();\n    var fontSizes = binSearch(2, width, (size) => {\n      var minFontSize = 0;\n      context.font = `${size}px ${fontFamily}`;\n      return width - context.measureText(text).width;\n    });\n    context.restore();\n    return fontSizes[1] || fontSizes[0];\n  }\n\n  function getFontSizeForHeight (height) {\n    return getFontSizeForWidth('m', height);\n  }\n\n  function DrawText (spec) {\n    context.save();\n    context.font = spec.font;\n    context.textAlign = spec.align || 'center';\n    context.textBaseline = spec.baseline || 'middle';\n    context.fillText(spec.text, flr(spec.rect.x + 0.5 * spec.rect.width), flr(spec.rect.y + 0.5 * spec.rect.height));\n    context.restore();\n  }\n\n  var countDownFont = getFontStyle({\n    text: `m`,\n    width: (width * 0.2)*(1-0.05*2),\n    height: (width * 0.2)*(1-0.05*2),\n  });\n\n  function renderCountdown (state) {\n    if(state.countdown > 0) {\n      DrawText({\n        text: '' + state.countdown,\n        rect: Geometry.Rectangle({\n          x: width / 2 - width*0.2 / 2,\n          y: height / 2 - width*0.2 / 2,\n          width: width*0.2,\n          height: width*0.2,\n        }),\n        font: countDownFont\n      });\n    }\n  }\n\n  function flr (x) {\n    return Math.floor(x);\n  }\n\n  function renderCircle (circ) {\n    context.save();\n    context.beginPath();\n    context.arc(flr(circ.x), flr(circ.y), flr(circ.radius), 0, 2 * Math.PI, false);\n    context.fillStyle = circ.color;\n    if(circ.opacity) {\n      context.globalAlpha = circ.opacity;\n    }\n    context.fill();\n    context.restore();\n  }\n\n  function init () {\n\n  }\n\n  function renderSound (state) {\n    if(state.gameOver) {\n      AudioPool.playSFX('hit');\n    }\n    if(state.didEat) {\n      AudioPool.playSFX('eat');\n    }\n  }\n  \n  var that = {\n    init,\n    render,\n    renderSound,\n    renderCircle,\n    get height () {\n      return height;\n    },\n    get width () {\n      return width;\n    }\n  };\n  return that;\n}\n"],"names":["window","GameRenderer","canvas","context","getContext","fontFamily","width","height","renderItem","part","color","renderRectangle","x","y","strokeColor","getFontStyle","spec","Math","min","getFontSizeForWidth","text","getFontSizeForHeight","rect","save","beginPath","fillStyle","fillRect","flr","strokeStyle","strokeRect","restore","binSearch","max","directionDecider","undefined","mid","floor","dir","fontSizes","size","font","measureText","DrawText","textAlign","align","textBaseline","baseline","fillText","countDownFont","renderSound","state","gameOver","AudioPool","playSFX","didEat","elapsed","stroke","clearRect","snake","renderSnake","obstacles","renderObstacles","food","countdown","Geometry","Rectangle","renderCountdown","circ","arc","radius","PI","opacity","globalAlpha","fill"],"version":3,"file":"index.d727383d.js.map"}
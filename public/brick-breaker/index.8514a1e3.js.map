{"mappings":"AAAAA,OAAOC,gBAAkB,SAA0BC,GAAgB,GAEjE,IAAIC,GAAS,EACTC,EAAU,IAAIC,IACdC,EAAc,IAAID,IAClBE,EAAgB,IAAIC,IACpBC,EAAmB,IAAID,IACvBE,EAAc,CAChB,CAAC,YAAa,QACd,CAAC,YAAa,QACd,CAAC,aAAc,SACf,CAAC,UAAW,MACZ,CAAC,SAAU,QAEbA,EAAcA,EAAYC,OAAOD,EAAYE,KAAIC,GAAKA,EAAEC,aACxD,IAAIC,EAAW,IAAIV,IAAIK,GAoBvB,SAASM,EAASJ,EAAKK,GACrB,OAAOL,EAAIM,IAAID,IAAQL,EAAIM,IAAIH,EAASG,IAAID,GAC9C,CAmBA,SAASE,EAAQC,EAASC,GACxB,GAAIlB,EACJ,IAAI,IAAImB,KAAUf,EAChBe,EAAOF,EAASC,GACbZ,EAAiBc,IAAID,IACtBf,EAAciB,OAAOF,EAG3B,CAcA,OA7DAG,SAASC,iBAAiB,WAAWC,IAInC,IAIIL,EAPAnB,KAGAmB,EAASN,EAAQZ,EAASuB,EAAEV,OAE9BV,EAAcqB,IAAIN,IAEhBA,EAASN,EAAQV,EAAaqB,EAAEV,QACtBR,EAAiBc,IAAID,KACjCb,EAAiBmB,IAAIN,GACrBf,EAAcqB,IAAIN,IAEjBpB,GACDiB,IAAA,IAQJM,SAASC,iBAAiB,SAASC,IACjC,GAAIxB,EAAJ,EAGImB,EAASN,EAAQZ,EAASuB,EAAEV,OAE9BV,EAAciB,OAAOF,GAEvB,IAAIA,EAASN,EAAQV,EAAaqB,EAAEV,KACjCR,EAAiBc,IAAID,IACtBb,EAAiBe,OAAOF,GAEvBpB,GACDiB,GAXA,CAWA,IA0BG,C,OACLA,E,UAbF,SAAoBF,EAAKK,GACvBlB,EAAQyB,IAAIZ,EAAKK,EACnB,E,cAEA,SAAwBL,EAAKK,GAC3BhB,EAAYuB,IAAIZ,EAAKK,EACvB,E,aAEA,SAAuBL,GACrBb,EAAQ0B,OAAOb,EACjB,EAOEc,WACExB,EAAcyB,QACd7B,GAAS,CACX,EACA8B,aACE1B,EAAcyB,QACd7B,GAAS,CACX,EAEJ","sources":["experiments-static/brick-breaker/modules/KeyboardHandler.js"],"sourcesContent":["window.KeyboardHandler = function KeyboardHandler (immediateHandle=false) {\n\n  var active = false;\n  var actions = new Map();\n  var onceActions = new Map();\n  var queuedActions = new Set();\n  var addedOnceActions = new Set();\n  var keyMappings = [\n    ['ArrowDown', 'Down'],\n    ['ArrowLeft', 'Left'],\n    ['ArrowRight', 'Right'],\n    ['ArrowUp', 'Up'],\n    ['Escape', 'Esc'],\n  ];\n  keyMappings = keyMappings.concat(keyMappings.map(x => x.reverse()));\n  var dupeKeys = new Map(keyMappings);\n\n  document.addEventListener('keydown', e => {\n    if(!active){\n      return;\n    }\n    var action = getKeys(actions, e.key);\n    if(action) {\n      queuedActions.add(action);\n    }\n    var action = getKeys(onceActions, e.key);\n    if(action && !addedOnceActions.has(action)) {\n      addedOnceActions.add(action);\n      queuedActions.add(action);\n    }\n    if(immediateHandle) {\n      handle();\n    }\n  });\n\n  function getKeys (map, key) {\n    return map.get(key) || map.get(dupeKeys.get(key));\n  }\n\n  document.addEventListener('keyup', e => {\n    if(!active){\n      return;\n    }\n    var action = getKeys(actions, e.key);\n    if(action) {\n      queuedActions.delete(action);\n    }\n    var action = getKeys(onceActions, e.key);\n    if(addedOnceActions.has(action)) {\n      addedOnceActions.delete(action)\n    }\n    if(immediateHandle) {\n      handle();\n    }\n  });\n\n  function handle (elapsed, gameState) {\n    if(!active) return;\n    for(var action of queuedActions) {\n      action(elapsed, gameState);\n      if(addedOnceActions.has(action)) {\n        queuedActions.delete(action);\n      }\n    }\n  };\n\n  function addAction (key, action) {\n    actions.set(key, action);\n  }\n\n  function addOnceAction (key, action) {\n    onceActions.set(key, action);\n  }\n\n  function removeAction (key) {\n    actions.remove(key);\n  }\n  \n  return {\n    handle,\n    addAction,\n    addOnceAction,\n    removeAction,\n    activate () {\n      queuedActions.clear();\n      active = true;\n    },\n    deactivate () {\n      queuedActions.clear();\n      active = false;\n    }\n  };\n}\n"],"names":["window","KeyboardHandler","immediateHandle","active","actions","Map","onceActions","queuedActions","Set","addedOnceActions","keyMappings","concat","map","x","reverse","dupeKeys","getKeys","key","get","handle","elapsed","gameState","action","has","delete","document","addEventListener","e","add","set","remove","activate","clear","deactivate"],"version":3,"file":"index.8514a1e3.js.map"}
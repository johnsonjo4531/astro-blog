window.Maze=function(e){var n={n:"s",e:"w",w:"e",s:"n"};function r(r={node:null,direction:direction}){var t={},i=e.setValues(r);e.setNonConfigurable(Object.keys(r),i),Object.defineProperties(t,i);var o=!1;return Object.defineProperties(t,{isLinked:{get:()=>o,set(e){var r=!!e;o=r;var i=n[t.direction];t.node[i].isLinked!==r&&(t.node[i].isLinked=r)},configurable:!0}}),t}function t(e,n){return e[n].node&&e[n].isLinked?e[n].node:null}function i(e,n){return e[n].node&&!e[n].isLinked?e[n].node:null}function o(n={}){var o={n:r({direction:"n"}),w:r({direction:"w"}),s:r({direction:"s"}),e:r({direction:"e"}),x:0,y:0},u={linked:{get n(){return t(d,"n")},get s(){return t(d,"s")},get e(){return t(d,"e")},get w(){return t(d,"w")}},unlinked:{get n(){return i(d,"n")},get s(){return i(d,"s")},get e(){return i(d,"e")},get w(){return i(d,"w")}}},s=Object.assign({},o,n,u),d={},a=e.setValues(s);e.setNonConfigurable([...Object.keys(o),...Object.keys(u)],a),e.setNonWritable(["n","e","s","w"],a),Object.defineProperties(d,a);var l=!1;return Object.defineProperty(d,"visited",{get:()=>l,set(e){l=!!e}}),d}function u(e,n){return`x:${e.x},y:${e.y},dir:${n}`}function s(e){for(var r=e.length,t=e[0].length,i=new Set,o=[],s=0;s<r;++s)for(var d=0;d<t;++d){var a=e[s][d];for(var[l,f]of Object.entries(a.unlinked))if(f)if("n"===l||"w"===l){var c=u(f,n[l]);i.has(c)||(o.push([n[l],f]),i.add(c))}else{c=u(a,l);i.has(c)||(o.push([l,a]),i.add(c))}}return o}function d(e,n){return e=Math.ceil(e),n=Math.floor(n),Math.floor(Math.random()*(n-e))+e}function a(e){return e[d(0,e.length)]}function l(e,n,r){for(var t of Object.values(e.unlinked))t&&!r.has(t)&&n.add(t)}return{generate:function(e){var n,r,t,i,u=function(e){for(var n=[],r=0;r<e;++r){n.push([]);for(var t=0;t<e;++t)n[r].push(o({x:t,y:r}))}var i=[];for(r=0;r<e;++r)for(t=0;t<e;++t)n[r][t].n.node=(n[r-1]||i)[t]||null,n[r][t].s.node=(n[r+1]||i)[t]||null,n[r][t].w.node=(n[r]||i)[t-1]||null,n[r][t].e.node=(n[r]||i)[t+1]||null;return n}(e),f=(u[0].length,u.length,new Set),c=new Set,g=(r=d(0,(n=u).length),t=d(0,n[0].length),n[r][t]);for(c.add(g),l(g,f,c);f.size>0;){g=(i=f,a([...i]));c.add(g),f.delete(g);var v=[];for(var[h,w]of Object.entries(g.unlinked))w&&c.has(w)&&v.push(h);g[a(v)].isLinked=!0,l(g,f,c)}return{matrix:u,walls:s(u)}}}}(ClassUtils);
//# sourceMappingURL=index.fc45a797.js.map

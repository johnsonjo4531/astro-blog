{"mappings":"AAAAA,OAAOC,WAAa,SAAqBC,GACvC,IAAIC,GAAS,EAETC,EAAW,CAACC,EAAaC,KAAY,EAAEA,EAAUD,EAAcC,GAAWA,EAE1EC,EAAUC,GAAG,SAAUN,GAC3B,IAAIK,EAAQ,GACV,MAAM,IAAIE,MAAM,gEAElB,IAAIC,EAAcH,EAAQI,WAAUT,GAAMA,EAAGU,UAAUC,SAAS,cAMhE,SAASC,EAAQC,GACf,GAAIA,aAAeC,QAAS,CAC1B,MAAMC,EAAiBF,EACvBA,EAAMR,EAAQI,WAAUT,GAAMA,IAAOe,GACvC,CACAV,EAAQG,GAAaE,UAAUM,OAAO,YACtCR,EAAcK,EACdR,EAAQG,GAAaE,UAAUO,IAAI,WACrC,CAEA,SAASC,EAAef,GACtBS,EAAOV,EAASM,EAAYL,EAAaE,EAAQD,QACnD,EAjBmB,IAAhBI,IACDA,EAAc,EACdH,EAAQG,GAAaE,UAAUO,IAAI,aAiBrC,IAAIE,EAAWC,iBAAgB,GAgD/B,OA9CAC,OAAOC,GAAGjB,EAAS,SAAS,SAAUkB,GACpCC,UAAUC,QAAQ,aACpB,IAEAJ,OAAOC,GAAGjB,EAAS,cAAc,SAAUkB,GACzCC,UAAUC,QAAQ,gBACpB,IAEAN,EAASO,cAAc,WAAW,KAChCR,GAAc,GACdM,UAAUC,QAAQ,oBAGpBN,EAASO,cAAc,aAAa,KAClCR,EAAc,GACdM,UAAUC,QAAQ,oBAGpBN,EAASO,cAAc,SAAS,KAC9BC,YAAW,KACTtB,EAAQG,GAAaoB,cAAc,IAAIC,MAAM,YAC5C,MAyBE,C,cACLX,E,OACAN,EACAkB,WACElB,EAAOP,EAAQ,IACfJ,GAAS,EACTkB,EAASW,UACX,EACAC,aACE9B,GAAS,EACTkB,EAASY,YACX,EAEJ","sources":["experiments-static/brick-breaker/modules/ButtonMenu.js"],"sourcesContent":["window.ButtonMenu = function ButtonMenu (el) {\n  let active = false;\n\n  let shiftIdx = (shiftAmount, length) => (2*length + (shiftAmount % length)) % length;\n  \n  let buttons = $$('button', el);\n  if(!buttons[0]) {\n    throw new Error('You need buttons inside this element for ButtonMenu to work!')\n;  }\n  let selectedIdx = buttons.findIndex(el => el.classList.contains('selected'));\n  if(selectedIdx === -1) {\n    selectedIdx = 0\n    buttons[selectedIdx].classList.add('selected');\n  }\n\n  function select (idx) {\n    if (idx instanceof Element) {\n      const buttonToSelect = idx;\n      idx = buttons.findIndex(el => el === buttonToSelect);\n    }\n    buttons[selectedIdx].classList.remove('selected');\n    selectedIdx = idx;\n    buttons[selectedIdx].classList.add('selected');\n  }\n\n  function shiftSelected (shiftAmount) {\n    select(shiftIdx(selectedIdx+shiftAmount, buttons.length))\n  }\n\n  var keyboard = KeyboardHandler(true)\n\n  Events.on(buttons, 'click', function (e) {\n    AudioPool.playSFX('menu_click');\n  });\n\n  Events.on(buttons, 'mouseenter', function (e) {\n    AudioPool.playSFX('menu_navigate');\n  })\n\n  keyboard.addOnceAction('ArrowUp', () => {\n    shiftSelected(-1);\n    AudioPool.playSFX('menu_navigate');\n  });\n\n  keyboard.addOnceAction('ArrowDown', () => {\n    shiftSelected(1);\n    AudioPool.playSFX('menu_navigate');\n  });\n\n  keyboard.addOnceAction('Enter', () => {\n    setTimeout(()=>{\n      buttons[selectedIdx].dispatchEvent(new Event('click'));\n    }, 0);\n  });\n\n  // document.addEventListener('keyup', (e) => {\n  //   if(!active) {\n  //     return;\n  //   }\n  //   switch(e.key) {\n  //     case 'ArrowUp':\n  //     shiftSelected(-1);\n  //     AudioPool.playSFX('menu_navigate');\n  //     break;\n  //     case 'ArrowDown':\n  //     shiftSelected(1);\n  //     AudioPool.playSFX('menu_navigate');\n  //     break;\n  //     case 'Enter':\n  //     setTimeout(()=>{\n  //       buttons[selectedIdx].dispatchEvent(new Event('click'));\n  //     }, 0);\n  //     AudioPool.playSFX('menu_click');\n  //     break;\n  //   }\n  // });\n\n  return {\n    shiftSelected,\n    select,\n    activate () {\n      select(buttons[0]);\n      active = true;\n      keyboard.activate();\n    },\n    deactivate () {\n      active = false;\n      keyboard.deactivate();\n    },\n  }\n}\n"],"names":["window","ButtonMenu","el","active","shiftIdx","shiftAmount","length","buttons","$$","Error","selectedIdx","findIndex","classList","contains","select","idx","Element","buttonToSelect","remove","add","shiftSelected","keyboard","KeyboardHandler","Events","on","e","AudioPool","playSFX","addOnceAction","setTimeout","dispatchEvent","Event","activate","deactivate"],"version":3,"file":"index.2876b060.js.map"}
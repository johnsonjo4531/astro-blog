{"mappings":"AAAAA,OAAOC,WAAa,WAClB,IAAIC,EAAY,CACd,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,UAGP,SAASC,EAAYC,GACnB,OAAOC,OAAOD,GAAQE,QAAQ,gBAAgB,SAAUC,GACtD,OAAOL,EAAUK,EACnB,GACF,CAEA,IAEIC,EAFAC,EAAUC,aAAaC,QAAQ,cA6CnC,OAzCEH,EADCC,EACMG,KAAKC,MAAMJ,GAEX,CACL,EAAG,GACH,GAAI,GACJ,GAAI,GACJ,GAAI,IAIRK,OAAOC,OAAOP,EAAM,CAClBQ,WAAYC,GAAIC,EAAMC,IAChBX,EAAKY,WAAWH,EAAGE,KAGvBX,EAAKS,GAAGI,KAAK,CAACH,EAAMC,IACpBX,EAAKS,GAAGK,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KAChCb,aAAae,QAAQ,aAAcb,KAAKc,UAAUlB,IACpD,EACAmB,eAAA,CAAgBC,GAAQV,EAAMC,KACrB,4BAA4BhB,EAAWyB,OAAWzB,EAAWe,OAAUf,EAAWgB,WAE3FC,WAAYH,EAAGE,GACb,GAAGX,EAAKS,GAAGY,OAAS,EAClB,OAAO,EAET,IAAI,IAAIC,EAAI,EAAGA,EAAI,IAAKA,EACtB,GAAGX,EAAQX,EAAKS,GAAGa,GAAG,GACpB,OAAO,EAGX,OAAO,CACT,EACAC,OAAQC,EAAIf,GACVe,EAAGC,UAAY,eACT9B,EAAWc,MAAMd,EAAWc,kBAChCT,EAAKS,GAAGiB,MAAM,EAAE,GAAGC,KAAI,CAACC,EAAGN,IAAItB,EAAKmB,eAAeG,EAAE,EAAGM,KAAIC,KAAK,OAAS,eAE9E,IAGK7B,CACT,CAhEoB","sources":["experiments-static/maze-solver/modules/ScoreBoard.js"],"sourcesContent":["window.ScoreBoard = (function () {\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n  \n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function (s) {\n      return entityMap[s];\n    });\n  }\n\n  var storage = localStorage.getItem('scoreboard');\n\n  var that;\n  if(storage) {\n    that = JSON.parse(storage);\n  } else {\n    that = {\n      5: [],\n      10: [],\n      15: [],\n      20: [],\n    };\n  } \n\n  Object.assign(that, {\n    writeScore (n, [name, score]) {\n      if(!that.isTopScore(n, score)) {\n        return;\n      }\n      that[n].push([name, score]);\n      that[n].sort((a, b) => b[1] - a[1]);\n      localStorage.setItem('scoreboard', JSON.stringify(that));\n    },\n    singleScoreStr (place, [name, score]) {\n      return `<div class=\"score-entry\">${escapeHtml(place)}. ${escapeHtml(name)}: ${escapeHtml(score)}</div>`;\n    },\n    isTopScore (n, score) {\n      if(that[n].length < 5) {\n        return true;\n      }\n      for(var i = 0; i < 5; ++i) {\n        if(score > that[n][i][1]) {\n          return true;\n        }\n      }\n      return false;\n    },\n    render (el, n) {\n      el.innerHTML = `\n      <h2>${escapeHtml(n)}x${escapeHtml(n)}</h2>\n      ${that[n].slice(0,5).map((x, i)=>that.singleScoreStr(i+1, x)).join('\\n') || \"N/A\"}\n      `;\n    }\n  });\n\n  return that;\n})();\n"],"names":["window","ScoreBoard","entityMap","escapeHtml","string","String","replace","s","that","storage","localStorage","getItem","JSON","parse","Object","assign","writeScore","n","name","score","isTopScore","push","sort","a","b","setItem","stringify","singleScoreStr","place","length","i","render","el","innerHTML","slice","map","x","join"],"version":3,"file":"index.9558ec56.js.map"}
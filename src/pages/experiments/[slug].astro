---
import BlogPostLayout from "../../layouts/BlogPostLayout.astro";
import "katex/dist/katex.min.css";
import Footer from "../../components/Footer.astro";
import { getCollection } from "astro:content";

import fs from "node:fs/promises";

// 2. When it's time to render, you can get the entry directly from the prop
const { experiment, html, link } = Astro.props;

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  function joinPaths(...paths: [string, ...string[]]): string {
    return paths.reduce(
      (acc, path) => acc.replace(/\/$/, "") + "/" + path.replace(/^\//, ""),
      "",
    );
  }

  const experiments = await getCollection("experiment");
  return Promise.all(
    experiments.map(async (experiment) => {
      const path = joinPaths(
        new URL("../../../experiments-static", import.meta.url).pathname,
        experiment.data.href,
        "index.html",
      );
      return {
        params: { slug: experiment.data.contentSlug },
        props: {
          experiment,
          html:
            experiment.data.type === "internal"
              ? await fs.readFile(path, "utf-8")
              : null,
          link:
            experiment.data.type === "external" ? experiment.data.href : null,
        },
      };
    }),
  );
}
---

<BlogPostLayout title={experiment.data.title}>
  <time>{experiment.data.timetext}</time>
  <p class="highlighted-card-section">{experiment.data.description}</p>
  <a href={experiment?.data.href}></a>
  {html}
  <Footer avatarSize={"large"} />
</BlogPostLayout>
